class Solution {
    public int[] nextGreaterElements(int[] nums) {
        int[] res = new int[nums.length];
        Stack<Integer> stack = new Stack<>();

        for(int i = (nums.length * 2) - 1; i >= 0; --i){
            while(!stack.isEmpty() && nums[stack.peek()] <= nums[i % nums.length]){
                stack.pop();
            }

            res[i % nums.length] = stack.isEmpty() ? -1 : nums[stack.peek()];
            stack.push(i % nums.length);
        }

        return res;
    }
}

TC: O(n). Only two traversals of the nums array are done. Further, at most 2n elements are pushed and popped from the stack
SC: O(n). A stack of size n is used. The array with which answer is delivered is of size n too.