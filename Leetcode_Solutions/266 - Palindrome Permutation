class Solution {
    public boolean canPermutePalindrome(String s) {
        int oddCount = 0;
        int[] counter = new int[26];
        for(int i=0; i < s.length(); i++){
            counter[s.charAt(i) - 'a']++;
        }

        for(int count : counter){
            if(count % 2 == 1){
                oddCount++;
            }
        }

        if(s.length() % 2 == 1){
            return oddCount == 1;
        }

        return oddCount == 0;
    }
}

TC: O(n + l) and is dependent on which is larger. O(n) where n is the length of the string + O(l) where l is the length of the counter
SC: O(1)