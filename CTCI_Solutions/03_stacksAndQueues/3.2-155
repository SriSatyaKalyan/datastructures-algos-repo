class MinStack {

    private LinkedList<Integer> stack;
    private LinkedList<Integer> minValueStack;
    private int minVal;

    public MinStack() {
        stack = new LinkedList<Integer>();
        minValueStack = new LinkedList<Integer>();
    }

    public void push(int val) {
        if(val <= getMin()){
            minValueStack.push(val);
        }
        stack.push(val);
    }

    public void pop() {
        int val = stack.pop();
        if(val == getMin()){
            minValueStack.pop();
        }
    }

    public int top() {
        int val = stack.pop();
        if(val == getMin()){
            minValueStack.pop();
        }
        return val;
    }

    public int getMin() {
        if(minValueStack.isEmpty()){
            return -1;
        }else{
            return minValueStack.peek();
        }
    }
}

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(val);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */

// class MinStack {

//     private LinkedList<Integer> stack;
//     private LinkedList<Integer> minValueStack;
//     private int minVal;

//     public MinStack() {
//         stack = new LinkedList<Integer>();
//         minValueStack = new LinkedList<Integer>();
//     }

//     public void push(int val) {
//         if(minValueStack.isEmpty()){
//             minVal = val;
//             minValueStack.push(val);
//         }else{
//             if(val < minVal){
//                 minVal = val;
//                 minValueStack.push(val);
//             }else{
//                 minValueStack.push(minVal);
//             }
//         }
//         stack.push(val);
//     }

//     public void pop() {
//         minValueStack.pop();
//         minVal = minValueStack.peek();
//         stack.pop();
//     }

//     public int top() {
//         minVal = minValueStack.peek();
//         return stack.peek();
//     }

//     public int getMin() {
//         if(minValueStack.isEmpty()){
//             return -1;
//         }
//         return minVal;
//     }
// }

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(val);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */